[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO ][main][2014-12-13 16:41:19] [ org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:495) ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7a7b0070: startup date [Sat Dec 13 16:41:19 CST 2014]; root of context hierarchy
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO ][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) ] Loading XML bean definitions from class path resource [applicationContext.xml]
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) ] Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) ] Loading schema mappings from [META-INF/spring.schemas]
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) ] Loaded schema mappings: {http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) ] Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) ] Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) ] Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) ] Found XML schema [http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd] in classpath: org/springframework/web/servlet/config/spring-mvc-3.0.xsd
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108) ] Loading bean definitions
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) ] Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO ][main][2014-12-13 16:41:19] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:202) ] JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) ] Looking for matching resources in directory tree [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq]
[DEBUG][main][2014-12-13 16:41:19] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\constants] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\viewModel] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\data] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\data\listener] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service\excel] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) ] Searching directory [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util] for files matching pattern [C:/Users/wangyudo/workspace/meetingplanner/WebContent/WEB-INF/classes/dfzq/**/*.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) ] Resolved location pattern [classpath*:dfzq/**/*.class] to resources [file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\constants\Status.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\DataList.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\InputController.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\ScheduleController.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\StatisticsLoadController.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\viewModel\MenuView.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\viewModel\TreeView.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\ArrangeMeetingDao.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\CompanyDao.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\FundDao.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\ScheduleDAO.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\TimeframeDao.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\data\listener\InitListener.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\ArrangeMent.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\Availability.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\Company.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\CompanyChangeRow.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\Fund.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\FundAvailability.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\FundChangeRow.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\OneOnOneMeetingRequest.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\Resource.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\Schedule.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\ScheduleByDVT.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\model\Timeframe.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service\ArrangementService.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service\DataLoadService.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service\excel\ExcelService.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\ArrayUtils.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\BeanFactryUtil.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\DateFormatter.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\DateUtil.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\ExceptionHandleUtils.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\SerialNumber.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\SqlLiteUtil.class], file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\util\StringUtil.class]]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\InputController.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\ScheduleController.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\controller\StatisticsLoadController.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\ArrangeMeetingDao.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\CompanyDao.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\FundDao.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\dao\TimeframeDao.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service\ArrangementService.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service\DataLoadService.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) ] Identified candidate component class: file [C:\Users\wangyudo\workspace\meetingplanner\WebContent\WEB-INF\classes\dfzq\service\excel\ExcelService.class]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) ] Loaded 29 bean definitions from location pattern [applicationContext.xml]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:525) ] Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7a7b0070: org.springframework.beans.factory.support.DefaultListableBeanFactory@3e2e18f2: defining beans [inputController,scheduleController,statisticsLoadController,arrangeMeetingDao,companyDao,fundDao,timeframeDao,arrangementService,dataLoadService,excelService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0,org.springframework.format.support.FormattingConversionServiceFactoryBean#0,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0,org.springframework.web.servlet.handler.MappedInterceptor#0,org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0,org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0,org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0,org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping,org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter,org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter,dataSource,sqlMapClient,sqlMapClientTemplate,restTemplate,scheduleDAO]; root of factory hierarchy
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:794) ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@f5958c9]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:818) ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1fa121e2]
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557) ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3e2e18f2: defining beans [inputController,scheduleController,statisticsLoadController,arrangeMeetingDao,companyDao,fundDao,timeframeDao,arrangementService,dataLoadService,excelService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0,org.springframework.format.support.FormattingConversionServiceFactoryBean#0,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0,org.springframework.web.servlet.handler.MappedInterceptor#0,org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0,org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0,org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0,org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping,org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter,org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter,dataSource,sqlMapClient,sqlMapClientTemplate,restTemplate,scheduleDAO,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'inputController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'inputController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.controller.InputController]: AutowiredFieldElement for dfzq.dao.CompanyDao dfzq.controller.InputController.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.controller.InputController]: AutowiredFieldElement for dfzq.dao.FundDao dfzq.controller.InputController.fundDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.controller.InputController]: AutowiredFieldElement for dfzq.dao.TimeframeDao dfzq.controller.InputController.timeframeDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'inputController' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'inputController': AutowiredFieldElement for dfzq.dao.CompanyDao dfzq.controller.InputController.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:202) ] Found init method on class [dfzq.dao.CompanyDao]: public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.<init>(InitDestroyAnnotationBeanPostProcessor.java:253) ] Found init method on class [dfzq.dao.CompanyDao]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@b112bb49
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.dao.CompanyDao]: ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.dao.CompanyDao]: AutowiredFieldElement for private dfzq.dao.FundDao dfzq.dao.CompanyDao.fundDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'companyDao' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'companyDao': ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'sqlMapClient' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'dataSource'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'dataSource'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'dataSource'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'companyDao': AutowiredFieldElement for private dfzq.dao.FundDao dfzq.dao.CompanyDao.fundDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:202) ] Found init method on class [dfzq.dao.FundDao]: public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.<init>(InitDestroyAnnotationBeanPostProcessor.java:253) ] Found init method on class [dfzq.dao.FundDao]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@b112bb49
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.dao.FundDao]: ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.dao.FundDao]: AutowiredFieldElement for dfzq.dao.CompanyDao dfzq.dao.FundDao.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'fundDao' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'fundDao': ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'fundDao': AutowiredFieldElement for dfzq.dao.CompanyDao dfzq.dao.FundDao.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:241) ] Returning eagerly cached instance of singleton bean 'companyDao' that is not fully initialized yet - a consequence of a circular reference
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'fundDao' to bean named 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:297) ] Invoking init method on bean 'fundDao': public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'companyDao' to bean named 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:297) ] Invoking init method on bean 'companyDao': public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'inputController' to bean named 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'inputController': AutowiredFieldElement for dfzq.dao.FundDao dfzq.controller.InputController.fundDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'inputController' to bean named 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'inputController': AutowiredFieldElement for dfzq.dao.TimeframeDao dfzq.controller.InputController.timeframeDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:202) ] Found init method on class [dfzq.dao.TimeframeDao]: public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.<init>(InitDestroyAnnotationBeanPostProcessor.java:253) ] Found init method on class [dfzq.dao.TimeframeDao]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@b112bb49
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.dao.TimeframeDao]: ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'timeframeDao' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'timeframeDao': ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:297) ] Invoking init method on bean 'timeframeDao': public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'inputController' to bean named 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'inputController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'scheduleController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'scheduleController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'scheduleController' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'scheduleController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'statisticsLoadController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'statisticsLoadController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'statisticsLoadController' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'statisticsLoadController'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'arrangeMeetingDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'arrangeMeetingDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:202) ] Found init method on class [dfzq.dao.ArrangeMeetingDao]: public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.<init>(InitDestroyAnnotationBeanPostProcessor.java:253) ] Found init method on class [dfzq.dao.ArrangeMeetingDao]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@b112bb49
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.dao.ArrangeMeetingDao]: ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'arrangeMeetingDao' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'arrangeMeetingDao': ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:297) ] Invoking init method on bean 'arrangeMeetingDao': public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'arrangeMeetingDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'arrangeMeetingDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'arrangementService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'arrangementService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.ArrangementService]: AutowiredFieldElement for private dfzq.service.DataLoadService dfzq.service.ArrangementService.dataLoadService
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.ArrangementService]: AutowiredFieldElement for private dfzq.dao.CompanyDao dfzq.service.ArrangementService.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.ArrangementService]: AutowiredFieldElement for private dfzq.dao.ArrangeMeetingDao dfzq.service.ArrangementService.arrangeMeetingDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.ArrangementService]: AutowiredFieldElement for private dfzq.dao.TimeframeDao dfzq.service.ArrangementService.timeframeDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.ArrangementService]: AutowiredFieldElement for private dfzq.dao.ScheduleDAO dfzq.service.ArrangementService.scheduleDAO
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'arrangementService' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'arrangementService': AutowiredFieldElement for private dfzq.service.DataLoadService dfzq.service.ArrangementService.dataLoadService
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'dataLoadService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'dataLoadService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.DataLoadService]: AutowiredFieldElement for private dfzq.dao.FundDao dfzq.service.DataLoadService.fundDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.DataLoadService]: AutowiredFieldElement for private dfzq.dao.CompanyDao dfzq.service.DataLoadService.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'dataLoadService' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'dataLoadService': AutowiredFieldElement for private dfzq.dao.FundDao dfzq.service.DataLoadService.fundDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'dataLoadService' to bean named 'fundDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'dataLoadService': AutowiredFieldElement for private dfzq.dao.CompanyDao dfzq.service.DataLoadService.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'dataLoadService' to bean named 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'dataLoadService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'arrangementService' to bean named 'dataLoadService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'arrangementService': AutowiredFieldElement for private dfzq.dao.CompanyDao dfzq.service.ArrangementService.companyDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'arrangementService' to bean named 'companyDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'arrangementService': AutowiredFieldElement for private dfzq.dao.ArrangeMeetingDao dfzq.service.ArrangementService.arrangeMeetingDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'arrangeMeetingDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'arrangementService' to bean named 'arrangeMeetingDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'arrangementService': AutowiredFieldElement for private dfzq.dao.TimeframeDao dfzq.service.ArrangementService.timeframeDao
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'arrangementService' to bean named 'timeframeDao'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'arrangementService': AutowiredFieldElement for private dfzq.dao.ScheduleDAO dfzq.service.ArrangementService.scheduleDAO
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'scheduleDAO'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'scheduleDAO'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:202) ] Found init method on class [dfzq.dao.ScheduleDAO]: public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.<init>(InitDestroyAnnotationBeanPostProcessor.java:253) ] Found init method on class [dfzq.dao.ScheduleDAO]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@b112bb49
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.dao.ScheduleDAO]: ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'scheduleDAO' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'scheduleDAO': ResourceElement for private com.ibatis.sqlmap.client.SqlMapClient com.common.BaseDao.sqlMapClient
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:297) ] Invoking init method on bean 'scheduleDAO': public void com.common.BaseDao.initSqlMapClient()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'scheduleDAO'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'scheduleDAO'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'arrangementService' to bean named 'scheduleDAO'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'arrangementService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'dataLoadService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'excelService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'excelService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) ] Found injected element on class [dfzq.service.excel.ExcelService]: AutowiredFieldElement for private dfzq.service.DataLoadService dfzq.service.excel.ExcelService.dataLoad
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'excelService' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) ] Processing injected method of bean 'excelService': AutowiredFieldElement for private dfzq.service.DataLoadService dfzq.service.excel.ExcelService.dataLoad
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'dataLoadService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) ] Autowiring by type from bean name 'excelService' to bean named 'dataLoadService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'excelService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.MappedInterceptor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.handler.MappedInterceptor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) ] Initializing new StandardEnvironment
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:103) ] Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) ] Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:442) ] No property editor [org.springframework.web.context.request.WebRequestInterceptorEditor] found for type org.springframework.web.context.request.WebRequestInterceptor according to 'Editor' suffix convention
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.handler.MappedInterceptor#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.handler.MappedInterceptor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:100) ] Looking for request mappings in application context: org.springframework.context.support.ClassPathXmlApplicationContext@7a7b0070: startup date [Sat Dec 13 16:41:19 CST 2014]; root of context hierarchy
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/getCompanyList],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public dfzq.controller.DataList dfzq.controller.InputController.getCompanyList(int,int,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/getFundList],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public dfzq.controller.DataList dfzq.controller.InputController.getFundList(int,int,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/configfund],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String dfzq.controller.InputController.configFundPage(java.util.Locale,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/getTimeframeList],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public dfzq.controller.DataList dfzq.controller.InputController.getTimeframeList(int,int,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/getFundTime/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public dfzq.controller.DataList dfzq.controller.InputController.getFundTime(java.lang.Integer,int,int,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/getCompanyTime/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public dfzq.controller.DataList dfzq.controller.InputController.getCompanyTime(java.lang.Integer,int,int,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/save1on1Company/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int dfzq.controller.InputController.save1on1Company(java.lang.Integer,java.util.List<java.lang.Integer>,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/saveTimeFund/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int dfzq.controller.InputController.saveTimeFund(java.lang.Integer,java.util.List<java.lang.Integer>,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/saveTimeCompany/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int dfzq.controller.InputController.saveTimeCompany(java.lang.Integer,java.util.List<java.lang.Integer>,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/crudFund],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String dfzq.controller.InputController.crudFundPage(org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/crudFund/submit],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int dfzq.controller.InputController.crudFundSubmit(dfzq.model.FundChangeRow[],org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/crudCompany],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String dfzq.controller.InputController.crudCompanyPage(org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/configCalendar],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String dfzq.controller.InputController.configCalendar(org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/get1on1CompanyList/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public dfzq.controller.DataList dfzq.controller.InputController.get1on1CompanyList(java.lang.Integer,int,int,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/configcompany],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String dfzq.controller.InputController.configCompanyPage(java.util.Locale,org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/input/crudCompany/submit],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int dfzq.controller.InputController.crudCompanySubmit(dfzq.model.CompanyChangeRow[],org.springframework.ui.Model)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/schedule],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String dfzq.controller.ScheduleController.responseSchedule(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
[INFO ][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:190) ] Mapped "{[/listdvt],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String dfzq.controller.ScheduleController.listScheduleByDVT()
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#1'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#1'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#2'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#2'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#3'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#3'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#4'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#4'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#5'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#5'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#6'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#6'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#7'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#7'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#8'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#8'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.web.servlet.handler.MappedInterceptor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#9'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#9'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#10'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#10'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#11'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#11'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#12'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#12'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#13'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#13'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#14'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#14'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean '(inner bean)#15'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean '(inner bean)#15'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.web.servlet.handler.MappedInterceptor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:71) ] Looking for URL mappings in application context: org.springframework.context.support.ClassPathXmlApplicationContext@7a7b0070: startup date [Sat Dec 13 16:41:19 CST 2014]; root of context hierarchy
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'inputController': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'scheduleController': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'statisticsLoadController': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'arrangeMeetingDao': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'companyDao': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'fundDao': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'timeframeDao': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'arrangementService': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'dataLoadService': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'excelService': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.handler.MappedInterceptor#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'dataSource': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'sqlMapClient': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'sqlMapClientTemplate': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'restTemplate': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'scheduleDAO': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'environment': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'systemProperties': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'systemEnvironment': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'importRegistry': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'messageSource': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86) ] Rejected bean name 'applicationEventMulticaster': no URL paths identified
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'dataSource'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'sqlMapClientTemplate'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'sqlMapClientTemplate'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'sqlMapClientTemplate' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'sqlMapClient'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) ] Invoking afterPropertiesSet() on bean with name 'sqlMapClientTemplate'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'sqlMapClientTemplate'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) ] Creating shared instance of singleton bean 'restTemplate'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) ] Creating instance of bean 'restTemplate'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ] Eagerly caching bean 'restTemplate' to allow for resolving potential circular references
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ] Finished creating instance of bean 'restTemplate'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'scheduleDAO'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:845) ] Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5a5338df]
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) ] Returning cached instance of singleton bean 'arrangementService'
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6057aebb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:20] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100000} Connection
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:20] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100000} Preparing Statement:  select  one.company_id as companyId , one.fund_id as fundId from company c inner join one_on_one_meeting_request one on one.company_id= c.id where exists(select 1 from company_availbility where company_id=c.id and time_frame_id in (1,2,3) ) and not exists (select 1 from company_availbility where company_id=c.id and time_frame_id in  (4,5,6,7) ) group by  one.company_id , one.fund_id       
[DEBUG][main][2014-12-13 16:41:20] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100001} Executing Statement:  select  one.company_id as companyId , one.fund_id as fundId from company c inner join one_on_one_meeting_request one on one.company_id= c.id where exists(select 1 from company_availbility where company_id=c.id and time_frame_id in (1,2,3) ) and not exists (select 1 from company_availbility where company_id=c.id and time_frame_id in  (4,5,6,7) ) group by  one.company_id , one.fund_id       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100001} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100001} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Header: [companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [2, 22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [7, 21]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [7, 32]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [7, 37]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [9, 33]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [9, 37]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [9, 51]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [11, 22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [11, 44]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [12, 22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [22, 25]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [22, 30]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [22, 32]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [22, 47]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [24, 14]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [24, 23]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [28, 43]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [28, 53]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [33, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [53, 43]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [54, 45]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [58, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [58, 22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [58, 23]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [59, 22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [63, 8]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [63, 11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [63, 27]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [63, 32]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [63, 39]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [63, 40]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [67, 8]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [67, 27]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [67, 32]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [67, 46]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [69, 11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [75, 23]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [75, 27]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [76, 27]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [76, 32]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [76, 45]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [77, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [77, 19]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [77, 27]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [83, 37]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [83, 48]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [87, 5]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [88, 10]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [91, 16]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [92, 9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [92, 16]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [92, 20]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [92, 38]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100002} Result: [92, 46]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@598bd2ba] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100003} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100003} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100004} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100004} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100004} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100005} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100005} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100005} Result: [2, 拓尔斯, 何东炯]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4f5991f6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100006} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100006} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100007} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100007} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100007} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100008} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100008} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100008} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@602e0143] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100009} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100009} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100010} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100010} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100010} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100011} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100011} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100011} Result: [22, 华夏基金 , null, 彭海伟]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@32c726ee] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100012} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100012} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100013} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100013} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100013} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100014} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100014} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100014} Result: [7, 百视通, 张建]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@76f4b65] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100015} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100015} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100016} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100016} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100016} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100017} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100017} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100017} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c4d1ac] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100018} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100018} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100019} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100019} Parameters: [21]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100019} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100020} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100020} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100020} Result: [21, 华夏基金 , null,  孙彬]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@76a2ddf3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100021} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100021} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100022} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100022} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100022} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100023} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100023} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100023} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@29526c05] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100024} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100024} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100025} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100025} Parameters: [32]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100025} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100026} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100026} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100026} Result: [32, 汇添富, null, 10人]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@45312be2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100027} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100027} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100028} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100028} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100028} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100029} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100029} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100029} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7331196b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100030} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100030} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100031} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100031} Parameters: [37]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100031} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100032} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100032} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100032} Result: [37, 南方基金, null, 应帅,马北雁,吴国清,蔡望鹏]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2bd08376] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100033} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100033} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100034} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100034} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100034} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100035} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100035} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100035} Result: [9, 朗玛信息, 余周军]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@64a40280] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100036} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100036} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100037} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100037} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100037} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100038} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100038} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100038} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@d62fe5b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100039} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100039} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100040} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100040} Parameters: [33]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100040} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100041} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100041} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100041} Result: [33, 嘉实, null, 张丹华]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@466276d8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100042} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100042} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100043} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100043} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100043} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100044} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100044} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100044} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@64c63c79] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100045} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100045} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100046} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100046} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100046} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100047} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100047} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100047} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3ad2e17] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100048} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100048} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100049} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100049} Parameters: [51]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100049} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100050} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100050} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100050} Result: [51, 中海, null, 夏春晖]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@554e218] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100051} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100051} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100052} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100052} Parameters: [11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100052} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100053} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100053} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100053} Result: [11, 富春通信, 陈苹]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@29ca3d04] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100054} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100054} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100055} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100055} Parameters: [11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100055} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100056} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100056} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100056} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4426bff1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100057} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100057} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100058} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100058} Parameters: [11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100058} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100059} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100059} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100059} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1a20270e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100060} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100060} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100061} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100061} Parameters: [44]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100061} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100062} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100062} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100062} Result: [44, 上投摩根, null, 王成]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2f16c6b3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100063} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100063} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100064} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100064} Parameters: [12]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100064} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100065} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100065} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100065} Result: [12, 光迅科技, 毛浩]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@52c3cb31] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100066} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100066} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100067} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100067} Parameters: [12]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100067} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100068} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100068} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100068} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6dab9b6d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100069} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100069} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100070} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100070} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100070} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100071} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100071} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100071} Result: [22, 许继电气, 姚武  ]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5460cf3a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100072} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100072} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100073} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100073} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100073} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100074} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100074} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100074} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3fc9504b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100075} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100075} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100076} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100076} Parameters: [25]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100076} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100077} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100077} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100077} Result: [25, 汇添富, null, 赵剑]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7e4204e2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100078} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100078} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100079} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100079} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100079} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100080} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100080} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100080} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1c481ff2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100081} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100081} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100082} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100082} Parameters: [30]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100082} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100083} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100083} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100083} Result: [30, 汇添富, null, 赵剑]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@676cf48] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100084} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100084} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100085} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100085} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100085} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100086} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100086} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100086} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@29a0cdb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100087} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100087} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100088} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100088} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100088} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100089} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100089} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100089} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6eb2384f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100090} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100090} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100091} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100091} Parameters: [47]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100091} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100092} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100092} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100092} Result: [47, 兴业, null, 杨跃斌等人]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@31dadd46] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100093} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100093} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100094} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100094} Parameters: [24]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100094} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100095} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100095} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100095} Result: [24, 荣盛发展, 陈金海]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@19b93fa8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100096} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100096} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100097} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100097} Parameters: [24]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100097} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100098} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100098} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100098} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@40db2a24] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100099} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100099} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100100} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100100} Parameters: [14]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100100} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100101} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100101} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100101} Result: [14, 海富通123123, null, 石红军123123]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@ee86bcb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100102} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100102} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100103} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100103} Parameters: [24]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100103} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100104} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100104} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100104} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6bca7e0d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100105} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100105} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100106} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100106} Parameters: [23]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100106} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100107} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100107} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100107} Result: [23, 华夏基金 , null, 潘中宁]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@8ad6665] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100108} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100108} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100109} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100109} Parameters: [28]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100109} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100110} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100110} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100110} Result: [28, 金地集团, 唐燕]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@68b32e3e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100111} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100111} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100112} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100112} Parameters: [28]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100112} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100113} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100113} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100113} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@42039326] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100114} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100114} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100115} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100115} Parameters: [43]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100115} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100116} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100116} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100116} Result: [43, 上投摩根, null, 唐倩]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a87f8ec] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100117} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100117} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100118} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100118} Parameters: [28]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100118} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100119} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100119} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100119} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7d1cfb8b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100120} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100120} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100121} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100121} Parameters: [53]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100121} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100122} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100122} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100122} Result: [53, 中银基金, null, 祁善斌 ]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@22356acd] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100123} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100123} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100124} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100124} Parameters: [33]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100124} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100125} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100125} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100125} Result: [33, 探路者, 张成]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@34f22f9d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100126} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100126} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100127} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100127} Parameters: [33]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100127} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100128} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100128} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100128} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6e4566f1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100129} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100129} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100130} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100130} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100130} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100131} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100131} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100131} Result: [2, 博时, null, 孙占军]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1b7c473a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100132} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100132} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100133} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100133} Parameters: [53]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100133} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100134} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100134} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100134} Result: [53, 金螳螂, 罗承云]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2a62b5bc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100135} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100135} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100136} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100136} Parameters: [53]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100136} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100137} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100137} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100137} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@53fd0d10] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100138} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100138} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100139} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100139} Parameters: [54]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100139} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100140} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100140} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100140} Result: [54, 中交建设, 俞京京]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@24111ef1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100141} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100141} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100142} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100142} Parameters: [54]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100142} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100143} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100143} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100143} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5dcb4f5f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100144} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100144} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100145} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100145} Parameters: [45]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100145} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100146} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100146} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100146} Result: [45, 太保资管（保险）, null, 李俊]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@561868a0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100147} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100147} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100148} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100148} Parameters: [58]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100148} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100149} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100149} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100149} Result: [58, 航空动力, 赵岳]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2dcd168a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100150} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100150} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100151} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100151} Parameters: [58]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100151} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100152} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100152} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100152} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7803bfd] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100153} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100153} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100154} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100154} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100154} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100155} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100155} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100155} Result: [3, 博时基金, null, 丁丹]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@62ef27a8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100156} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100156} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100157} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100157} Parameters: [58]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100157} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100158} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100158} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100158} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6f3c660a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100159} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100159} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100160} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100160} Parameters: [58]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100160} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100161} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100161} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100161} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@16fdec90] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100162} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100162} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100163} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100163} Parameters: [59]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100163} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100164} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100164} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100164} Result: [59, 钢研高纳, 许洪贵]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7776ab] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100165} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100165} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100166} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100166} Parameters: [59]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100166} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100167} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100167} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100167} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@51acdf2e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100168} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100168} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100169} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100169} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100169} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100170} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100170} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100170} Result: [63, 海大集团, 卢洁雯]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4eb386df] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100171} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100171} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100172} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100172} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100172} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100173} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100173} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100173} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7ac0e420] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100174} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100174} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100175} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100175} Parameters: [8]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100175} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100176} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100176} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100176} Result: [8, 国投瑞银, null, 朱红裕]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3da30852] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100177} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100177} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100178} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100178} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100178} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100179} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100179} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100179} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4c51cf28] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100180} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100180} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100181} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100181} Parameters: [11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100181} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100182} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100182} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100182} Result: [11, 国投瑞银 , null, 陈小玲]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@77825085] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100183} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100183} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100184} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100184} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100184} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100185} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100185} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100185} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3e7dd664] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100186} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100186} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100187} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100187} Parameters: [27]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100187} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100188} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100188} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100188} Result: [27, 汇添富, null, 雷鸣]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4b1d6571] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100189} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100189} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100190} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100190} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100190} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100191} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100191} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100191} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4f25b795] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100192} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100192} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100193} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100193} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100193} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100194} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100194} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100194} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@16414e40] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100195} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100195} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100196} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100196} Parameters: [39]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100196} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100197} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100197} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100197} Result: [39, 鹏华, null, 杨俊]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@46dffdc3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100198} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100198} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100199} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100199} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100199} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100200} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100200} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100200} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6ad3381f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100201} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100201} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100202} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100202} Parameters: [40]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100202} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100203} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100203} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100203} Result: [40, 鹏华, null, 刘国丰]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@34a875b3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100204} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100204} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100205} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100205} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100205} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100206} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100206} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100206} Result: [67, 雏鹰农牧, 吴易德]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6d1ef78d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100207} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100207} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100208} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100208} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100208} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100209} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100209} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100209} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@77d67cf3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100210} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100210} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100211} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100211} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100211} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100212} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100212} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100212} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6ee6f53] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100213} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100213} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100214} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100214} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100214} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100215} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100215} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100215} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@134d26af] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100216} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100216} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100217} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100217} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100217} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100218} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100218} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100218} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@31bcf236] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100219} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100219} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100220} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100220} Parameters: [46]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100220} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100221} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100221} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100221} Result: [46, 太平 , null, 庞良永]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@517d4a0d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100222} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100222} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100223} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100223} Parameters: [69]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100223} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100224} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100224} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100224} Result: [69, 瑞普生物, 曾志伟]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c1156a7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100225} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100225} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100226} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100226} Parameters: [69]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100226} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100227} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100227} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100227} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@691939c9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100228} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100228} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100229} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100229} Parameters: [75]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100229} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100230} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100230} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100230} Result: [75, 张裕A, 曲为民]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@512535ff] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100231} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100231} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100232} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100232} Parameters: [75]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100232} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100233} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100233} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100233} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@22295ec4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100234} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100234} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100235} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100235} Parameters: [75]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100235} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100236} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100236} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100236} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1a760689] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100237} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100237} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100238} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100238} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100238} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100239} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100239} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100239} Result: [76, 青岛啤酒, 张瑞祥]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@77258e59] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100240} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100240} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100241} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100241} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100241} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100242} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100242} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100242} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7e3181aa] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100243} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100243} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100244} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100244} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100244} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100245} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100245} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100245} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@331acdad] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100246} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100246} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100247} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100247} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100247} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100248} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100248} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100248} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@f316aeb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100249} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100249} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100250} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100250} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100250} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100251} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100251} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100251} Result: [77, 涪陵榨菜, 黄正坤]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5dd1c9f2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100252} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100252} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100253} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100253} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100253} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100254} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100254} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100254} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@324a0017] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100255} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100255} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100256} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100256} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100256} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100257} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100257} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100257} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7502291e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100258} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100258} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100259} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100259} Parameters: [19]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100259} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100260} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100260} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100260} Result: [19, 华宝兴业, null, 胡戈游]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@46944ca9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100261} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100261} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100262} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100262} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100262} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100263} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100263} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100263} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4612b856] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100264} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100264} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100265} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100265} Parameters: [83]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100265} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100266} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100266} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100266} Result: [83, 上海凯宝 , 穆竟伟]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@79c7532f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100267} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100267} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100268} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100268} Parameters: [83]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100268} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100269} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100269} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100269} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@43f82e78] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100270} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100270} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100271} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100271} Parameters: [83]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100271} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100272} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100272} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100272} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2dc995f4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100273} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100273} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100274} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100274} Parameters: [48]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100274} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100275} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100275} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100275} Result: [48, 泽熙投资, null, 严鹏]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@64b73e7a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100276} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100276} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100277} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100277} Parameters: [87]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100277} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100278} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100278} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100278} Result: [87, 海亮股份, 邵国勇]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@12ed9db6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100279} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100279} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100280} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100280} Parameters: [87]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100280} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100281} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100281} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100281} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@55322aab] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100282} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100282} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100283} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100283} Parameters: [5]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100283} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100284} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100284} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100284} Result: [5, 大成基金, null, 虞亚新]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@50468873] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100285} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100285} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100286} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100286} Parameters: [88]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100286} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100287} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100287} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100287} Result: [88, 云南锗业 , 金红国]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@76884e4b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100288} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100288} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100289} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100289} Parameters: [88]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100289} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100290} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100290} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100290} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@16c63f5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100291} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100291} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100292} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100292} Parameters: [10]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100292} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100293} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100293} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100293} Result: [10, 国投瑞银, null, 刘伟]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@b1712f3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100294} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100294} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100295} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100295} Parameters: [91]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100295} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100296} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100296} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100296} Result: [91, 新纶科技, 杨利]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4758820d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100297} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100297} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100298} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100298} Parameters: [91]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100298} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100299} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100299} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100299} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2eee3069] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100300} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100300} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100301} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100301} Parameters: [16]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100301} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100302} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100302} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100302} Result: [16, 海富通, null, 陈洪]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4df5bcb4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100303} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100303} Preparing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100304} Executing Statement:          select id as id , name as name, contact as contact       from company       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100304} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100304} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100305} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100305} Header: [id, name, contact]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100305} Result: [92, 中海达, 何金成]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2826f61] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100306} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100306} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100307} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100307} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100307} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100308} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100308} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100308} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@130dca52] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100309} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100309} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100310} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100310} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100310} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100311} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100311} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100311} Result: [9, 国投瑞银, null, 刘杰文]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@687ef2e0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100312} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100312} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100313} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100313} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100313} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100314} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100314} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100314} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1e636ea3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100315} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100315} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100316} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100316} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100316} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100317} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100317} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100317} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4ce7fffa] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100318} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100318} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100319} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100319} Parameters: [20]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100319} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100320} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100320} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100320} Result: [20, 华宝兴业, null, 陈乐华]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@75f95314] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100321} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100321} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100322} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100322} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100322} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100323} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100323} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100323} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@495fac5f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100324} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100324} Preparing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100325} Executing Statement:          select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor       from fund       where id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100325} Parameters: [38]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100325} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100326} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100326} Header: [id, fundName, phoneNumber, contactor]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100326} Result: [38, 农银汇理, null, 付娟]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@79d94571] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100327} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100327} Preparing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100328} Executing Statement:          select count(*)         from company_availbility         where company_id=? and time_frame_id in (1,2,3)      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100328} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100328} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100329} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100329} Header: [count(*)]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100329} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7a1a3478] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100330} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100330} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100331} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100331} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100331} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100332} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100332} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100332} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100332} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100332} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@222eb8aa] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100333} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100333} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100334} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100334} Parameters: [92, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100334} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100335} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7203c7ff] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100336} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100336} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100337} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100337} Parameters: [38, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100337} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100338} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@71454b9d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100339} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100339} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100340} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100340} Parameters: [1, 1, 38, 92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100340} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@623e088f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100341} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100341} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100342} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100342} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100342} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100343} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100343} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100343} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2d6764b2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100344} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100344} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100345} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100345} Parameters: [中海达(何金成)-农银汇理(付娟), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 中海达(何金成)-农银汇理(付娟), 1, -1, ,f38,c92,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100345} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100344} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100346} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100346} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100346} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100347} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100347} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100347} Result: [32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@79351f41] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100348} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100348} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100349} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100349} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100349} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100350} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100350} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100350} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100350} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100350} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@13d73fa] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100351} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100351} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100352} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100352} Parameters: [92, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100352} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100353} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100353} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100353} Result: [1, 92, 38]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@74c79fa2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100354} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100354} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100355} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100355} Parameters: [92, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100355} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100356} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7642df8f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100357} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100357} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100358} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100358} Parameters: [20, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100358} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100359} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@63a270c9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100360} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100360} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100361} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100361} Parameters: [1, 2, 20, 92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100361} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1199fe66] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100362} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100362} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100363} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100363} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100363} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100364} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100364} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100364} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2d96543c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100365} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100365} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100366} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100366} Parameters: [中海达(何金成)-华宝兴业(陈乐华), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 中海达(何金成)-华宝兴业(陈乐华), 1, -1, ,f20,c92,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100366} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100365} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100367} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100367} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100367} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100368} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100368} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100368} Result: [33]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@cd1d761] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100369} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100369} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100370} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100370} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100370} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100371} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100371} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100371} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100371} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100371} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6b8d96d9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100372} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100372} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100373} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100373} Parameters: [92, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100373} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100374} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100374} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100374} Result: [1, 92, 38]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@ebaa6cb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100375} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100375} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100376} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100376} Parameters: [92, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100376} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100377} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100377} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100377} Result: [1, 92, 20]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@436bc36] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100378} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100378} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100379} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100379} Parameters: [92, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100379} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100380} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@37091312] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100381} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100381} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100382} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100382} Parameters: [9, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100382} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100383} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@550a1967] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100384} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100384} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100385} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100385} Parameters: [1, 3, 9, 92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100385} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@584f54e6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100386} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100386} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100387} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100387} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100387} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100388} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100388} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100388} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2dca0d64] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100389} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100389} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100390} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100390} Parameters: [中海达(何金成)-国投瑞银(刘杰文), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 中海达(何金成)-国投瑞银(刘杰文), 1, -1, ,f9,c92,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100390} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100389} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100391} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100391} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100391} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100392} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100392} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100392} Result: [34]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5ef6ae06] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100393} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100393} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100394} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100394} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100394} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100395} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100395} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100395} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100395} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100395} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1cdc4c27] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100396} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100396} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100397} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100397} Parameters: [92, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100397} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100398} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100398} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100398} Result: [1, 92, 38]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1e8ce150] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100399} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100399} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100400} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100400} Parameters: [92, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100400} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100401} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100401} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100401} Result: [1, 92, 20]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1b73be9f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100402} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100402} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100403} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100403} Parameters: [92, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100403} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100404} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100404} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100404} Result: [1, 92, 9]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@30b19518] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100405} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100405} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100406} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100406} Parameters: [2, null, 46, 92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100406} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6ad59d92] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100407} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100407} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100408} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100408} Parameters: [92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100408} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100409} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100409} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100409} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100409} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100409} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2cc44ad] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100410} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100410} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100411} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100411} Parameters: [92, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100411} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100412} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100412} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100412} Result: [1, 92, 38]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@663411de] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100413} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100413} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100414} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100414} Parameters: [92, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100414} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100415} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100415} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100415} Result: [1, 92, 20]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@75cd8043] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100416} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100416} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100417} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100417} Parameters: [92, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100417} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100418} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100418} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100418} Result: [1, 92, 9]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@10b9db7b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100419} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100419} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100420} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100420} Parameters: [2, null, 16, 92]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100420} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6ee660fb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100421} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100421} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100422} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100422} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100422} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100423} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100423} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100423} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100423} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100423} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1ecee32c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100424} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100424} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100425} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100425} Parameters: [63, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100425} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100426} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4b41e4dd] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100427} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100427} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100428} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100428} Parameters: [8, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100428} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100429} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@42721fe] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100430} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100430} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100431} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100431} Parameters: [1, 1, 8, 63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100431} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5b619d14] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100432} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100432} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100433} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100433} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100433} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100434} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100434} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100434} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7f36662c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100435} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100435} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100436} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100436} Parameters: [海大集团(卢洁雯)-国投瑞银(朱红裕), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 海大集团(卢洁雯)-国投瑞银(朱红裕), 1, -1, ,f8,c63,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100436} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100435} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100437} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100437} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100437} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100438} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100438} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100438} Result: [35]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@767e20cf] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100439} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100439} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100440} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100440} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100440} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100441} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100441} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100441} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100441} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100441} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@17a1e4ca] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100442} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100442} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100443} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100443} Parameters: [63, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100443} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100444} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100444} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100444} Result: [1, 63, 8]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4a194c39] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100445} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100445} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100446} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100446} Parameters: [63, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100446} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100447} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@56113384] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100448} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100448} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100449} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100449} Parameters: [11, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100449} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100450} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5f9678e1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100451} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100451} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100452} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100452} Parameters: [1, 2, 11, 63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100452} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5a9d6f02] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100453} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100453} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100454} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100454} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100454} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100455} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100455} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100455} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5ccbeb64] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100456} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100456} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100457} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100457} Parameters: [海大集团(卢洁雯)-国投瑞银 (陈小玲), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 海大集团(卢洁雯)-国投瑞银 (陈小玲), 1, -1, ,f11,c63,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100457} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100456} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100458} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100458} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100458} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100459} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100459} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100459} Result: [36]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3243b914] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100460} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100460} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100461} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100461} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100461} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100462} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100462} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100462} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100462} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100462} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@626c44e7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100463} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100463} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100464} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100464} Parameters: [63, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100464} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100465} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100465} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100465} Result: [1, 63, 8]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3bcbb589] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100466} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100466} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100467} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100467} Parameters: [63, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100467} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100468} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100468} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100468} Result: [1, 63, 11]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@35d08e6c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100469} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100469} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100470} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100470} Parameters: [63, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100470} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100471} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6b3e12b5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100472} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100472} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100473} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100473} Parameters: [27, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100473} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100474} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@42463763] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100475} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100475} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100476} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100476} Parameters: [1, 3, 27, 63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100476} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7ca33c24] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100477} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100477} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100478} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100478} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100478} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100479} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100479} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100479} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@41dd05a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100480} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100480} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100481} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100481} Parameters: [海大集团(卢洁雯)-汇添富(雷鸣), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 海大集团(卢洁雯)-汇添富(雷鸣), 1, -1, ,f27,c63,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100481} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100480} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100482} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100482} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100482} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100483} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100483} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100483} Result: [37]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1b765a2c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100484} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100484} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100485} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100485} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100485} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100486} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100486} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100486} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100486} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100486} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@18920cc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100487} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100487} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100488} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100488} Parameters: [63, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100488} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100489} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100489} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100489} Result: [1, 63, 8]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6492fab5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100490} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100490} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100491} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100491} Parameters: [63, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100491} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100492} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100492} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100492} Result: [1, 63, 11]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5f6722d3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100493} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100493} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100494} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100494} Parameters: [63, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100494} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100495} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100495} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100495} Result: [1, 63, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@51972dc7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100496} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100496} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100497} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100497} Parameters: [2, null, 39, 63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100497} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5911e990] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100498} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100498} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100499} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100499} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100499} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100500} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100500} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100500} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100500} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100500} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@24d09c1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100501} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100501} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100502} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100502} Parameters: [7, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100502} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100503} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@47f4e407] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100504} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100504} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100505} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100505} Parameters: [32, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100505} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100506} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@fc258b1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100507} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100507} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100508} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100508} Parameters: [3, 1, 32, 7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100508} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@57ea113a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100509} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100509} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100510} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100510} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100510} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100511} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100511} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100511} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2b0f373b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100512} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100512} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100513} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100513} Parameters: [百视通(张建)-汇添富(10人), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 百视通(张建)-汇添富(10人), 2, -1, ,f32,c7,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100513} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100512} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100514} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100514} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100514} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100515} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100515} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100515} Result: [38]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2072acb2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100516} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100516} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100517} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100517} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100517} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100518} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100518} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100518} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100518} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100518} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@70a36a66] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100519} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100519} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100520} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100520} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100520} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100521} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@d3957fe] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100522} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100522} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100523} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100523} Parameters: [32, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100523} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100524} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100524} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100524} Result: [3, 7, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@64ba3208] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100525} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100525} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100526} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100526} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100526} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100527} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5e1fa5b1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100528} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100528} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100529} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100529} Parameters: [32, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100529} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100530} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3e821657] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100531} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100531} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100532} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100532} Parameters: [3, 2, 32, 22]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100532} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@615091b8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100533} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100533} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100534} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100534} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100534} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100535} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100535} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100535} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@260e86a1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100536} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100536} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100537} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100537} Parameters: [许继电气(姚武  )-汇添富(10人), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 许继电气(姚武  )-汇添富(10人), 2, -1, ,f32,c22,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100537} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100536} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100538} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100538} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100538} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100539} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100539} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100539} Result: [39]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@ebb6851] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100540} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100540} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100541} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100541} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100541} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100542} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100542} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100542} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100542} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100542} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6f152006] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100543} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100543} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100544} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100544} Parameters: [63, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100544} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100545} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100545} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100545} Result: [1, 63, 8]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7cbc3762] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100546} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100546} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100547} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100547} Parameters: [63, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100547} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100548} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100548} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100548} Result: [1, 63, 11]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@56303b57] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100549} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100549} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100550} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100550} Parameters: [63, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100550} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100551} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100551} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100551} Result: [1, 63, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@78f5c518] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100552} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100552} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100553} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100553} Parameters: [4, null, 32, 63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100553} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@753432a2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100554} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100554} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100555} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100555} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100555} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100556} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100556} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100556} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100556} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100556} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@44e3a2b2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100557} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100557} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100558} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100558} Parameters: [67, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100558} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100559} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1d2bd371] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100560} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100560} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100561} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100561} Parameters: [32, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100561} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100562} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100562} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100562} Result: [3, 7, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@18bc345] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100563} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100563} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100564} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100564} Parameters: [67, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100564} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100565} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3724af13] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100566} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100566} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100567} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100567} Parameters: [32, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100567} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100568} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100568} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100568} Result: [3, 22, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@180da663] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100569} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100569} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100570} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100570} Parameters: [67, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100570} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100571} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@424ebba3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100572} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100572} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100573} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100573} Parameters: [32, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100573} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100574} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7a560583] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100575} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100575} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100576} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100576} Parameters: [3, 3, 32, 67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100576} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@77a7cf58] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100577} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100577} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100578} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100578} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100578} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100579} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100579} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100579} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@37efd131] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100580} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100580} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100581} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100581} Parameters: [雏鹰农牧(吴易德)-汇添富(10人), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 雏鹰农牧(吴易德)-汇添富(10人), 2, -1, ,f32,c67,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100581} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100580} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100582} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100582} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100582} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100583} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100583} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100583} Result: [40]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@293a5f75] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100584} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100584} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100585} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100585} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100585} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100586} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100586} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100586} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100586} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100586} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@56e8b606] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100587} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100587} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100588} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100588} Parameters: [76, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100588} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100589} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@53142455] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100590} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100590} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100591} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100591} Parameters: [32, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100591} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100592} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100592} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100592} Result: [3, 7, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@60975100] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100593} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100593} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100594} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100594} Parameters: [76, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100594} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100595} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@61c9c3fd] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100596} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100596} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100597} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100597} Parameters: [32, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100597} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100598} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100598} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100598} Result: [3, 22, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c7b5824] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100599} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100599} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100600} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100600} Parameters: [76, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100600} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100601} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@8c11eee] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100602} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100602} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100603} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100603} Parameters: [32, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100603} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100604} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100604} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100604} Result: [3, 67, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5cbe877d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100605} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100605} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100606} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100606} Parameters: [4, null, 32, 76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100606} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@708400f6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100607} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100607} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100608} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100608} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100608} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100609} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100609} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100609} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100609} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100609} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4bff64c2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100610} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100610} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100611} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100611} Parameters: [2, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100611} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100612} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@c2db68f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100613} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100613} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100614} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100614} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100614} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100615} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@61ce23ac] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100616} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100616} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100617} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100617} Parameters: [3, 1, 22, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100617} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6f2cfcc2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100618} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100618} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100619} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100619} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100619} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100620} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100620} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100620} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@ccb4b1b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100621} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100621} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100622} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100622} Parameters: [拓尔斯(何东炯)-华夏基金 (彭海伟), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 拓尔斯(何东炯)-华夏基金 (彭海伟), 3, -1, ,f22,c2,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100622} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100621} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100623} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100623} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100623} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100624} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100624} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100624} Result: [41]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7c1e2a2d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100625} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100625} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100626} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100626} Parameters: [11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100626} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100627} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100627} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100627} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100627} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100627} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2cc3ad05] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100628} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100628} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100629} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100629} Parameters: [11, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100629} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100630} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3d9f6567] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100631} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100631} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100632} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100632} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100632} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100633} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100633} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100633} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@35e5d0e5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100634} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100634} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100635} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100635} Parameters: [11, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100635} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100636} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@655ef322] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100637} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100637} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100638} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100638} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100638} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100639} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5066d65f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100640} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100640} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100641} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100641} Parameters: [3, 2, 22, 11]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100641} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3ecd267f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100642} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100642} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100643} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100643} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100643} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100644} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100644} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100644} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6bb2d00b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100645} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100645} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100646} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100646} Parameters: [富春通信(陈苹)-华夏基金 (彭海伟), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 富春通信(陈苹)-华夏基金 (彭海伟), 3, -1, ,f22,c11,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100646} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100645} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100647} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100647} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100647} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100648} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100648} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100648} Result: [42]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4c5474f5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100649} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100649} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100650} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100650} Parameters: [12]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100650} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100651} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100651} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100651} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100651} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100651} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3bd418e4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100652} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100652} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100653} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100653} Parameters: [12, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100653} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100654} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2e61d218] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100655} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100655} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100656} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100656} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100656} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100657} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100657} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100657} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@e84a8e1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100658} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100658} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100659} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100659} Parameters: [12, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100659} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100660} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7d42c224] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100661} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100661} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100662} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100662} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100662} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100663} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100663} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100663} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@35390ee3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100664} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100664} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100665} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100665} Parameters: [12, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100665} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100666} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5ee2b6f9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100667} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100667} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100668} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100668} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100668} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100669} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@58fb7731] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100670} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100670} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100671} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100671} Parameters: [3, 3, 22, 12]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100671} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@37ddb69a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100672} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100672} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100673} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100673} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100673} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100674} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100674} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100674} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4b9df8a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100675} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100675} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100676} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100676} Parameters: [光迅科技(毛浩)-华夏基金 (彭海伟), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 光迅科技(毛浩)-华夏基金 (彭海伟), 3, -1, ,f22,c12,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100676} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100675} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100677} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100677} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100677} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100678} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100678} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100678} Result: [43]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@235a0c16] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100679} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100679} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100680} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100680} Parameters: [58]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100680} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100681} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100681} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100681} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100681} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100681} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@18b0930f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100682} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100682} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100683} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100683} Parameters: [58, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100683} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100684} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@395b56bb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100685} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100685} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100686} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100686} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100686} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100687} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100687} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100687} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@52d239ba] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100688} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100688} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100689} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100689} Parameters: [58, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100689} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100690} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6c5945a7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100691} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100691} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100692} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100692} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100692} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100693} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100693} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100693} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5c10f1c3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100694} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100694} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100695} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100695} Parameters: [58, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100695} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100696} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@64a8c844] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100697} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100697} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100698} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100698} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100698} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100699} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100699} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100699} Result: [3, 12, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@18c5069b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100700} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100700} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100701} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100701} Parameters: [4, null, 22, 58]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100701} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@485e36bc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100702} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100702} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100703} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100703} Parameters: [59]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100703} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100704} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100704} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100704} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100704} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100704} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2e9fda69] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100705} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100705} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100706} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100706} Parameters: [59, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100706} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100707} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@736d6a5c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100708} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100708} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100709} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100709} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100709} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100710} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100710} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100710} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@63fdab07] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100711} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100711} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100712} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100712} Parameters: [59, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100712} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100713} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1af687fe] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100714} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100714} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100715} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100715} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100715} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100716} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100716} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100716} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@74a6a609] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100717} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100717} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100718} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100718} Parameters: [59, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100718} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100719} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@54d18072] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100720} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100720} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100721} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100721} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100721} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100722} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100722} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100722} Result: [3, 12, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@424fd310] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100723} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100723} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100724} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100724} Parameters: [4, null, 22, 59]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100724} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5286c33a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100725} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100725} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100726} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100726} Parameters: [63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100726} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100727} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100727} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100727} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100727} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100727} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6c25e6c4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100728} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100728} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100729} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100729} Parameters: [63, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100729} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100730} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100730} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100730} Result: [1, 63, 8]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@48a12036] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100731} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100731} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100732} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100732} Parameters: [63, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100732} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100733} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100733} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100733} Result: [1, 63, 11]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@b70da4c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100734} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100734} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100735} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100735} Parameters: [63, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100735} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100736} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100736} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100736} Result: [1, 63, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@435fb7b5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100737} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100737} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100738} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100738} Parameters: [4, null, 27, 63]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100738} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@696f0212] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100739} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100739} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100740} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100740} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100740} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100741} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100741} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100741} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100741} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100741} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@56c698e3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100742} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100742} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100743} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100743} Parameters: [67, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100743} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100744} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@19553973] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100745} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100745} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100746} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100746} Parameters: [27, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100746} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100747} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4c4748bf] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100748} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100748} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100749} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100749} Parameters: [3, 1, 27, 67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100749} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@73dce0e6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100750} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100750} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100751} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100751} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100751} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100752} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100752} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100752} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4795ded0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100753} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100753} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100754} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100754} Parameters: [雏鹰农牧(吴易德)-汇添富(雷鸣), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 雏鹰农牧(吴易德)-汇添富(雷鸣), 4, -1, ,f27,c67,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100754} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100753} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100755} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100755} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100755} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100756} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100756} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100756} Result: [44]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@47c4ecdc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100757} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100757} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100758} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100758} Parameters: [75]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100758} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100759} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100759} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100759} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100759} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100759} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4b7e96a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100760} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100760} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100761} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100761} Parameters: [75, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100761} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100762} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4bd1f8dd] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100763} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100763} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100764} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100764} Parameters: [27, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100764} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100765} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100765} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100765} Result: [3, 67, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3c989952] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100766} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100766} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100767} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100767} Parameters: [75, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100767} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100768} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@25bc0606] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100769} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100769} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100770} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100770} Parameters: [27, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100770} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100771} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1951b871] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100772} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100772} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100773} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100773} Parameters: [3, 2, 27, 75]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100773} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@43aaf813] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100774} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100774} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100775} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100775} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100775} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100776} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100776} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100776} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@e98770d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100777} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100777} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100778} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100778} Parameters: [张裕A(曲为民)-汇添富(雷鸣), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 张裕A(曲为民)-汇添富(雷鸣), 4, -1, ,f27,c75,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100778} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100777} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100779} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100779} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100779} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100780} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100780} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100780} Result: [45]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@31e4bb20] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100781} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100781} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100782} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100782} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100782} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100783} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100783} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100783} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100783} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100783} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@765f05af] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100784} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100784} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100785} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100785} Parameters: [76, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100785} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100786} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@13f17eb4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100787} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100787} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100788} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100788} Parameters: [27, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100788} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100789} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100789} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100789} Result: [3, 67, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4409e975] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100790} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100790} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100791} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100791} Parameters: [76, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100791} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100792} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@758a34ce] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100793} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100793} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100794} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100794} Parameters: [27, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100794} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100795} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100795} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100795} Result: [3, 75, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1522d8a0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100796} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100796} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100797} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100797} Parameters: [76, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100797} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100798} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@246f8b8b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100799} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100799} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100800} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100800} Parameters: [27, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100800} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100801} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3381b4fc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100802} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100802} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100803} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100803} Parameters: [3, 3, 27, 76]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100803} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5c42d2b7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100804} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100804} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100805} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100805} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100805} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100806} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100806} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100806} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@aeab9a1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100807} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100807} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100808} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100808} Parameters: [青岛啤酒(张瑞祥)-汇添富(雷鸣), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 青岛啤酒(张瑞祥)-汇添富(雷鸣), 4, -1, ,f27,c76,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100808} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100807} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100809} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100809} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100809} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100810} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100810} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100810} Result: [46]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a4ca3f6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100811} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100811} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100812} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100812} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100812} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100813} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100813} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100813} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100813} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100813} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@45905bff] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100814} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100814} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100815} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100815} Parameters: [77, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100815} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100816} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6b44435b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100817} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100817} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100818} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100818} Parameters: [27, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100818} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100819} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100819} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100819} Result: [3, 67, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3543df7d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100820} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100820} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100821} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100821} Parameters: [77, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100821} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100822} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@698122b2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100823} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100823} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100824} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100824} Parameters: [27, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100824} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100825} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100825} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100825} Result: [3, 75, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3b2c0e88] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100826} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100826} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100827} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100827} Parameters: [77, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100827} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100828} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@476b0ae6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100829} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100829} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100830} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100830} Parameters: [27, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100830} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100831} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100831} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100831} Result: [3, 76, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@549949be] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100832} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100832} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100833} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100833} Parameters: [4, null, 27, 77]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100833} Types: [java.lang.Integer, null, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3eeb318f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100834} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100834} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100835} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100835} Parameters: [33]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100835} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100836} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100836} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100836} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100836} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100836} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6da00fb9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100837} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100837} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100838} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100838} Parameters: [33, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100838} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100839} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@75b25825] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100840} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100840} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100841} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100841} Parameters: [2, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100841} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100842} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3a3e4aff] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100843} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100843} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100844} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100844} Parameters: [5, 1, 2, 33]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100844} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3f0846c6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100845} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100845} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100846} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100846} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100846} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100847} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100847} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100847} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1021f6c9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100848} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100848} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100849} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100849} Parameters: [探路者(张成)-博时(孙占军), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 探路者(张成)-博时(孙占军), 5, -1, ,f2,c33,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100849} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100848} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100850} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100850} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100850} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100851} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100851} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100851} Result: [47]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2974f221] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100852} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100852} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100853} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100853} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100853} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100854} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100854} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100854} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100854} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100854} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@665df3c6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100855} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100855} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100856} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100856} Parameters: [2, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100856} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100857} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100857} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100857} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@aa549e5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100858} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100858} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100859} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100859} Parameters: [2, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100859} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100860} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3b7ff809] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100861} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100861} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100862} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100862} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100862} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100863} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100863} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100863} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3f792b9b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100864} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100864} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100865} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100865} Parameters: [2, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100865} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100866} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1cbf6e72] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100867} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100867} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100868} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100868} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100868} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100869} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100869} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100869} Result: [3, 12, 22]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4da602fc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100870} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100870} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100871} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100871} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100871} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100872} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100872} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100872} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100872} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100872} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@72758afa] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100873} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100873} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100874} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100874} Parameters: [67, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100874} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100875} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100875} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100875} Result: [3, 67, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7fc6de5b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100876} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100876} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100877} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100877} Parameters: [67, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100877} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100878} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@60a2630a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100879} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100879} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100880} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100880} Parameters: [8, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100880} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100881} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@40cb698e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100882} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100882} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100883} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100883} Parameters: [5, 2, 8, 67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100883} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@75f65e45] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100884} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100884} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100885} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100885} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100885} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100886} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100886} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100886} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a5bd950] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100887} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100887} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100888} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100888} Parameters: [雏鹰农牧(吴易德)-国投瑞银(朱红裕), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 雏鹰农牧(吴易德)-国投瑞银(朱红裕), 5, -1, ,f8,c67,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100888} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100887} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100889} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100889} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100889} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100890} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100890} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100890} Result: [48]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2313052e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100891} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100891} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100892} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100892} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100892} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100893} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100893} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100893} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100893} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100893} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@57fd91c9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100894} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100894} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100895} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100895} Parameters: [67, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100895} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100896} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100896} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100896} Result: [3, 67, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@674658f7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100897} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100897} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100898} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100898} Parameters: [67, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100898} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100899} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100899} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100899} Result: [5, 67, 8]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@26425897] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100900} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100900} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100901} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100901} Parameters: [67, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100901} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100902} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100902} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100902} Result: [3, 67, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@56a4479a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100903} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100903} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100904} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100904} Parameters: [67]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100904} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100905} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100905} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100905} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100905} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100905} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@62f4ff3b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100906} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100906} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100907} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100907} Parameters: [67, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100907} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100908} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100908} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100908} Result: [3, 67, 27]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@207b8649] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100909} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100909} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100910} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100910} Parameters: [67, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100910} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100911} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100911} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100911} Result: [5, 67, 8]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@57eda880] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100912} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100912} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100913} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100913} Parameters: [67, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100913} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100914} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100914} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100914} Result: [3, 67, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2cae1042] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100915} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100915} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100916} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100916} Parameters: [69]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100916} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100917} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100917} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100917} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100917} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100917} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2262b621] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100918} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100918} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100919} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100919} Parameters: [69, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100919} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100920} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@788fcafb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100921} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100921} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100922} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100922} Parameters: [11, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100922} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100923} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1698ee84] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100924} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100924} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100925} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100925} Parameters: [5, 1, 11, 69]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100925} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@328cf0e1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100926} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100926} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100927} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100927} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100927} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100928} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100928} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100928} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@201b6b6f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100929} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100929} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100930} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100930} Parameters: [瑞普生物(曾志伟)-国投瑞银 (陈小玲), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 瑞普生物(曾志伟)-国投瑞银 (陈小玲), 6, -1, ,f11,c69,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100930} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100929} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100931} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100931} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100931} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100932} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100932} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100932} Result: [49]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3e5499cc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100933} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100933} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100934} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100934} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100934} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100935} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100935} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100935} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100935} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100935} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@30bcf3c1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100936} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100936} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100937} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100937} Parameters: [7, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100937} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100938} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100938} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100938} Result: [3, 7, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5b444398] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100939} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100939} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100940} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100940} Parameters: [7, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100940} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100941} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a776e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100942} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100942} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100943} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100943} Parameters: [21, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100943} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100944} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1f2f9244] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100945} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100945} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100946} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100946} Parameters: [5, 2, 21, 7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100946} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@338494fa] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100947} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100947} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100948} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100948} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100948} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100949} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100949} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100949} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@129b4fe2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100950} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100950} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100951} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100951} Parameters: [百视通(张建)-华夏基金 ( 孙彬), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 百视通(张建)-华夏基金 ( 孙彬), 6, -1, ,f21,c7,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100951} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100950} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100952} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100952} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100952} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100953} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100953} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100953} Result: [50]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@58359ebd] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100954} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100954} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100955} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100955} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100955} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100956} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100956} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100956} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100956} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100956} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2bb7bd00] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100957} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100957} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100958} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100958} Parameters: [7, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100958} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100959} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100959} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100959} Result: [3, 7, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@45c8d09f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100960} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100960} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100961} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100961} Parameters: [7, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100961} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100962} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100962} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100962} Result: [5, 7, 21]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@41e350f1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100963} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100963} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100964} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100964} Parameters: [7, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100964} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100965} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@d8305c2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100966} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100966} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100967} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100967} Parameters: [37, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100967} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100968} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@75e91545] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100969} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100969} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100970} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100970} Parameters: [5, 3, 37, 7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100970} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@22b53226] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100971} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100971} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100972} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100972} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100972} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100973} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100973} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100973} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@40c80397] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100974} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100974} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100975} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100975} Parameters: [百视通(张建)-南方基金(应帅,马北雁,吴国清,蔡望鹏), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 百视通(张建)-南方基金(应帅,马北雁,吴国清,蔡望鹏), 5, -1, ,f37,c7,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100975} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100974} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100976} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100976} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100976} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100977} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100977} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100977} Result: [51]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@ed3068a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100978} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100978} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100979} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100979} Parameters: [7]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100979} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100980} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100980} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100980} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100980} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100980} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a8e6492] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100981} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100981} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100982} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100982} Parameters: [7, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100982} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100983} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100983} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100983} Result: [3, 7, 32]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7b324585] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100984} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100984} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100985} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100985} Parameters: [7, 2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100985} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100986} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100986} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100986} Result: [5, 7, 21]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@662f5666] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100987} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100987} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100988} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100988} Parameters: [7, 3]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100988} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100989} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100989} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100989} Result: [5, 7, 37]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@27305e6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100990} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100990} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100991} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100991} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100991} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100992} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100992} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100992} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100992} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100992} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6f8f9349] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100993} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100993} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100994} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100994} Parameters: [9, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100994} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100995} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5c3b6c6e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100996} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100996} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100997} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100997} Parameters: [51, 1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-100997} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-100998} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@37b70343] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100999} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-100999} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101000} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101000} Parameters: [5, 1, 51, 9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101000} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4879f0f2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101001} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101001} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101002} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101002} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101002} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101003} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101003} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101003} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@41813449] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101004} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101004} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101005} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101005} Parameters: [朗玛信息(余周军)-中海(夏春晖), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 朗玛信息(余周军)-中海(夏春晖), 7, -1, ,f51,c9,]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101005} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101004} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101006} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101006} Parameters: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101006} Types: []
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101007} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101007} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101007} Result: [52]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@58ebfd03] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101008} Connection
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101008} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101009} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101009} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101009} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101010} ResultSet
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101010} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101010} Result: [1]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101010} Result: [2]
[DEBUG][main][2014-12-13 16:41:21] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101010} Result: [3]
[DEBUG][main][2014-12-13 16:41:21] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a4b2d8f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101011} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101011} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101012} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101012} Parameters: [9, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101012} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101013} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101013} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101013} Result: [5, 9, 51]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@f73dcd6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101014} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101014} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101015} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101015} Parameters: [9, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101015} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101016} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@40499e4f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101017} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101017} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101018} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101018} Parameters: [37, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101018} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101019} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4cc6fa2a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101020} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101020} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101021} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101021} Parameters: [5, 2, 37, 9]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101021} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6f2cb653] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101022} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101022} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101023} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101023} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101023} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101024} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101024} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101024} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6b9ce1bf] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101025} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101025} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101026} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101026} Parameters: [朗玛信息(余周军)-南方基金(应帅,马北雁,吴国清,蔡望鹏), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 朗玛信息(余周军)-南方基金(应帅,马北雁,吴国清,蔡望鹏), 7, -1, ,f37,c9,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101026} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101025} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101027} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101027} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101027} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101028} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101028} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101028} Result: [53]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@435871cb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101029} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101029} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101030} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101030} Parameters: [9]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101030} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101031} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101031} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101031} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101031} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101031} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@19fb8826] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101032} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101032} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101033} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101033} Parameters: [9, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101033} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101034} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101034} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101034} Result: [5, 9, 51]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@62ea3440] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101035} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101035} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101036} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101036} Parameters: [9, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101036} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101037} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101037} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101037} Result: [5, 9, 37]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@66ce957f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101038} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101038} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101039} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101039} Parameters: [9, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101039} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101040} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@666b83a4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101041} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101041} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101042} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101042} Parameters: [33, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101042} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101043} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@16ecee1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101044} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101044} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101045} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101045} Parameters: [5, 3, 33, 9]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101045} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4a3329b9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101046} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101046} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101047} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101047} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101047} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101048} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101048} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101048} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@12bfd80d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101049} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101049} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101050} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101050} Parameters: [朗玛信息(余周军)-嘉实(张丹华), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 朗玛信息(余周军)-嘉实(张丹华), 6, -1, ,f33,c9,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101050} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101049} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101051} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101051} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101051} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101052} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101052} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101052} Result: [54]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3f053c80] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101053} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101053} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101054} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101054} Parameters: [11]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101054} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101055} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101055} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101055} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101055} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101055} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5b40ceb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101056} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101056} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101057} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101057} Parameters: [11, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101057} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101058} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1e63ec0b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101059} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101059} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101060} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101060} Parameters: [44, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101060} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101061} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@285c08c8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101062} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101062} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101063} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101063} Parameters: [5, 1, 44, 11]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101063} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c88b9fc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101064} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101064} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101065} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101065} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101065} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101066} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101066} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101066} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@47605f2f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101067} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101067} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101068} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101068} Parameters: [富春通信(陈苹)-上投摩根(王成), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 富春通信(陈苹)-上投摩根(王成), 8, -1, ,f44,c11,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101068} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101067} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101069} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101069} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101069} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101070} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101070} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101070} Result: [55]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3d484181] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101071} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101071} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101072} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101072} Parameters: [11]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101072} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101073} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101073} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101073} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101073} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101073} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@242aa8d9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101074} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101074} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101075} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101075} Parameters: [11, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101075} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101076} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101076} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101076} Result: [5, 11, 44]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@60f7cc1d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101077} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101077} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101078} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101078} Parameters: [11, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101078} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101079} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101079} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101079} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1b065145] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101080} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101080} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101081} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101081} Parameters: [11, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101081} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101082} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4bff1903] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101083} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101083} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101084} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101084} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101084} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101085} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101085} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101085} Result: [3, 12, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@654d8173] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101086} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101086} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101087} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101087} Parameters: [75]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101087} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101088} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101088} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101088} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101088} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101088} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@636e8cc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101089} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101089} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101090} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101090} Parameters: [75, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101090} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101091} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@12dae582] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101092} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101092} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101093} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101093} Parameters: [23, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101093} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101094} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5b057c8c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101095} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101095} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101096} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101096} Parameters: [5, 1, 23, 75]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101096} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5b7ea70d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101097} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101097} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101098} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101098} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101098} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101099} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101099} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101099} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@30f5a68a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101100} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101100} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101101} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101101} Parameters: [张裕A(曲为民)-华夏基金 (潘中宁), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 张裕A(曲为民)-华夏基金 (潘中宁), 9, -1, ,f23,c75,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101101} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101100} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101102} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101102} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101102} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101103} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101103} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101103} Result: [56]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@53f48368] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101104} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101104} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101105} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101105} Parameters: [75]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101105} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101106} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101106} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101106} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101106} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101106} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4c37b5b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101107} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101107} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101108} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101108} Parameters: [75, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101108} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101109} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101109} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101109} Result: [5, 75, 23]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a8c1f44] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101110} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101110} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101111} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101111} Parameters: [75, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101111} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101112} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101112} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101112} Result: [3, 75, 27]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@50fe837a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101113} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101113} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101114} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101114} Parameters: [75, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101114} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101115} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5ce33a58] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101116} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101116} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101117} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101117} Parameters: [27, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101117} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101118} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101118} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101118} Result: [3, 76, 27]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5357c287] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101119} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101119} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101120} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101120} Parameters: [12]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101120} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101121} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101121} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101121} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101121} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101121} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@485a3466] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101122} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101122} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101123} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101123} Parameters: [12, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101123} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101124} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4264b240] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101125} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101125} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101126} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101126} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101126} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101127} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101127} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101127} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6bb75258] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101128} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101128} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101129} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101129} Parameters: [12, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101129} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101130} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2783717b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101131} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101131} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101132} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101132} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101132} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101133} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101133} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101133} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3f363cf5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101134} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101134} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101135} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101135} Parameters: [12, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101135} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101136} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101136} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101136} Result: [3, 12, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1bb1fde8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101137} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101137} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101138} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101138} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101138} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101139} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101139} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101139} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101139} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101139} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@30990c1b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101140} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101140} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101141} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101141} Parameters: [76, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101141} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101142} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2dbe250d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101143} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101143} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101144} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101144} Parameters: [45, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101144} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101145} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3e34ace1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101146} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101146} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101147} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101147} Parameters: [5, 1, 45, 76]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101147} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4de41af9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101148} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101148} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101149} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101149} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101149} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101150} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101150} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101150} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@305f7627] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101151} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101151} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101152} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101152} Parameters: [青岛啤酒(张瑞祥)-太保资管（保险）(李俊), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 青岛啤酒(张瑞祥)-太保资管（保险）(李俊), 10, -1, ,f45,c76,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101152} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101151} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101153} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101153} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101153} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101154} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101154} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101154} Result: [57]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@62435e70] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101155} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101155} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101156} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101156} Parameters: [76]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101156} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101157} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101157} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101157} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101157} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101157} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@269f4bad] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101158} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101158} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101159} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101159} Parameters: [76, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101159} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101160} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101160} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101160} Result: [5, 76, 45]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7bc10d84] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101161} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101161} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101162} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101162} Parameters: [76, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101162} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101163} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@557a1e2d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101164} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101164} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101165} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101165} Parameters: [27, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101165} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101166} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101166} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101166} Result: [3, 75, 27]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@366ef90e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101167} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101167} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101168} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101168} Parameters: [76, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101168} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101169} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101169} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101169} Result: [3, 76, 27]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@a5b0b86] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101170} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101170} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101171} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101171} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101171} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101172} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101172} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101172} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101172} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101172} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@73ff4fae] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101173} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101173} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101174} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101174} Parameters: [77, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101174} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101175} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2f9a01c1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101176} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101176} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101177} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101177} Parameters: [19, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101177} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101178} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6b5894c8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101179} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101179} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101180} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101180} Parameters: [5, 1, 19, 77]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101180} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7829b776] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101181} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101181} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101182} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101182} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101182} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101183} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101183} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101183} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4763c727] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101184} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101184} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101185} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101185} Parameters: [涪陵榨菜(黄正坤)-华宝兴业(胡戈游), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 涪陵榨菜(黄正坤)-华宝兴业(胡戈游), 11, -1, ,f19,c77,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101185} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101184} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101186} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101186} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101186} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101187} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101187} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101187} Result: [58]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@458342d3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101188} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101188} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101189} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101189} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101189} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101190} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101190} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101190} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101190} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101190} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@9ed238c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101191} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101191} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101192} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101192} Parameters: [77, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101192} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101193} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101193} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101193} Result: [5, 77, 19]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@56f6d40b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101194} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101194} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101195} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101195} Parameters: [77, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101195} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101196} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4d098f9b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101197} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101197} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101198} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101198} Parameters: [2, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101198} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101199} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7fc44dec] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101200} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101200} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101201} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101201} Parameters: [5, 2, 2, 77]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101201} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2692b61e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101202} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101202} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101203} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101203} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101203} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101204} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101204} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101204} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@47dbb1e2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101205} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101205} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101206} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101206} Parameters: [涪陵榨菜(黄正坤)-博时(孙占军), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 涪陵榨菜(黄正坤)-博时(孙占军), 8, -1, ,f2,c77,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101206} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101205} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101207} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101207} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101207} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101208} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101208} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101208} Result: [59]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4f2613d1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101209} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101209} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101210} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101210} Parameters: [77]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101210} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101211} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101211} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101211} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101211} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101211} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@773f7880] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101212} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101212} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101213} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101213} Parameters: [77, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101213} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101214} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101214} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101214} Result: [5, 77, 19]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4c51bb7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101215} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101215} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101216} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101216} Parameters: [77, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101216} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101217} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101217} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101217} Result: [5, 77, 2]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5b080f3a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101218} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101218} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101219} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101219} Parameters: [77, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101219} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101220} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@665e9289] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101221} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101221} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101222} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101222} Parameters: [27, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101222} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101223} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101223} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101223} Result: [3, 76, 27]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2756c0a7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101224} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101224} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101225} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101225} Parameters: [83]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101225} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101226} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101226} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101226} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101226} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101226} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@71984c3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101227} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101227} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101228} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101228} Parameters: [83, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101228} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101229} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@277f7dd3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101230} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101230} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101231} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101231} Parameters: [37, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101231} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101232} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@470a696f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101233} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101233} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101234} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101234} Parameters: [5, 1, 37, 83]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101234} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2b491fee] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101235} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101235} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101236} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101236} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101236} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101237} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101237} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101237} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5ddabb18] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101238} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101238} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101239} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101239} Parameters: [上海凯宝 (穆竟伟)-南方基金(应帅,马北雁,吴国清,蔡望鹏), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 上海凯宝 (穆竟伟)-南方基金(应帅,马北雁,吴国清,蔡望鹏), 12, -1, ,f37,c83,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101239} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101238} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101240} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101240} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101240} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101241} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101241} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101241} Result: [60]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@58e6d4b8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101242} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101242} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101243} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101243} Parameters: [83]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101243} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101244} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101244} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101244} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101244} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101244} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@28d6290] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101245} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101245} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101246} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101246} Parameters: [83, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101246} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101247} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101247} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101247} Result: [5, 83, 37]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@38f57b3d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101248} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101248} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101249} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101249} Parameters: [83, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101249} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101250} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@64df9a61] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101251} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101251} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101252} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101252} Parameters: [48, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101252} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101253} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c3dec30] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101254} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101254} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101255} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101255} Parameters: [5, 2, 48, 83]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101255} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7c56e013] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101256} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101256} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101257} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101257} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101257} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101258} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101258} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101258} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2cac4385] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101259} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101259} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101260} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101260} Parameters: [上海凯宝 (穆竟伟)-泽熙投资(严鹏), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 上海凯宝 (穆竟伟)-泽熙投资(严鹏), 9, -1, ,f48,c83,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101260} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101259} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101261} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101261} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101261} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101262} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101262} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101262} Result: [61]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@34a1d21f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101263} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101263} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101264} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101264} Parameters: [53]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101264} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101265} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101265} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101265} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101265} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101265} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@71ae31b0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101266} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101266} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101267} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101267} Parameters: [53, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101267} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101268} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c104774] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101269} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101269} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101270} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101270} Parameters: [43, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101270} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101271} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@44e3760b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101272} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101272} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101273} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101273} Parameters: [5, 1, 43, 53]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101273} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1d7f7be7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101274} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101274} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101275} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101275} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101275} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101276} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101276} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101276} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@427b5f92] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101277} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101277} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101278} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101278} Parameters: [金螳螂(罗承云)-上投摩根(唐倩), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 金螳螂(罗承云)-上投摩根(唐倩), 13, -1, ,f43,c53,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101278} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101277} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101279} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101279} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101279} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101280} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101280} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101280} Result: [62]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c7d121c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101281} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101281} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101282} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101282} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101282} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101283} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101283} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101283} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101283} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101283} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@419a20a6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101284} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101284} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101285} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101285} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101285} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101286} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@10fde30a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101287} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101287} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101288} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101288} Parameters: [47, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101288} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101289} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@346939bf] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101290} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101290} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101291} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101291} Parameters: [5, 1, 47, 22]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101291} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@74e47444] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101292} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101292} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101293} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101293} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101293} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101294} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101294} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101294} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@39dcf4b0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101295} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101295} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101296} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101296} Parameters: [许继电气(姚武  )-兴业(杨跃斌等人), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 许继电气(姚武  )-兴业(杨跃斌等人), 14, -1, ,f47,c22,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101296} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101295} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101297} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101297} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101297} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101298} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101298} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101298} Result: [63]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@18518ccf] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101299} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101299} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101300} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101300} Parameters: [22]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101300} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101301} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101301} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101301} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101301} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101301} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4c6daf0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101302} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101302} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101303} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101303} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101303} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101304} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101304} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101304} Result: [5, 22, 47]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@162be91c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101305} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101305} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101306} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101306} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101306} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101307} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101307} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101307} Result: [3, 22, 32]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@55787112] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101308} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101308} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101309} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101309} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101309} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101310} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1992eaf4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101311} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101311} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101312} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101312} Parameters: [25, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101312} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101313} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3f28bd56] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101314} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101314} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101315} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101315} Parameters: [5, 3, 25, 22]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101315} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@21d8bcbe] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101316} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101316} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101317} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101317} Parameters: [3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101317} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101318} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101318} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101318} Result: [3, 2014-11-23, 11:00-12:00, 1a, 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@18245eb0] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101319} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101319} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101320} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101320} Parameters: [许继电气(姚武  )-汇添富(赵剑), 2014-11-23 11:00:00.0, 2014-11-23 12:00:00.0, 0, 许继电气(姚武  )-汇添富(赵剑), 7, -1, ,f25,c22,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101320} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101319} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101321} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101321} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101321} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101322} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101322} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101322} Result: [64]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@72a85671] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101323} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101323} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101324} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101324} Parameters: [54]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101324} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101325} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101325} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101325} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101325} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101325} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4ae33a11] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101326} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101326} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101327} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101327} Parameters: [54, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101327} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101328} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3a94964] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101329} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101329} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101330} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101330} Parameters: [45, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101330} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101331} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101331} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101331} Result: [5, 76, 45]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@631e06ab] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101332} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101332} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101333} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101333} Parameters: [54, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101333} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101334} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@346a361] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101335} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101335} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101336} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101336} Parameters: [45, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101336} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101337} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@186978a6] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101338} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101338} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101339} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101339} Parameters: [5, 2, 45, 54]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101339} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4052274f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101340} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101340} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101341} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101341} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101341} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101342} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101342} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101342} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@acb0951] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101343} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101343} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101344} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101344} Parameters: [中交建设(俞京京)-太保资管（保险）(李俊), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 中交建设(俞京京)-太保资管（保险）(李俊), 10, -1, ,f45,c54,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101344} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101343} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101345} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101345} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101345} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101346} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101346} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101346} Result: [65]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@28276e50] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101347} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101347} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101348} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101348} Parameters: [87]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101348} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101349} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101349} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101349} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101349} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101349} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@675d8c96] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101350} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101350} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101351} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101351} Parameters: [87, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101351} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101352} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@63648ee9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101353} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101353} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101354} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101354} Parameters: [5, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101354} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101355} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7651218e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101356} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101356} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101357} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101357} Parameters: [5, 1, 5, 87]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101357} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5b58ed3c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101358} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101358} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101359} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101359} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101359} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101360} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101360} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101360} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@64beebb7] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101361} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101361} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101362} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101362} Parameters: [海亮股份(邵国勇)-大成基金(虞亚新), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 海亮股份(邵国勇)-大成基金(虞亚新), 15, -1, ,f5,c87,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101362} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101361} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101363} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101363} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101363} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101364} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101364} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101364} Result: [66]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@32f0fba8] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101365} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101365} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101366} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101366} Parameters: [24]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101366} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101367} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101367} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101367} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101367} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101367} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@ab7a938] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101368} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101368} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101369} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101369} Parameters: [24, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101369} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101370} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@569bf9eb] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101371} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101371} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101372} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101372} Parameters: [23, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101372} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101373} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101373} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101373} Result: [5, 75, 23]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@76ba13c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101374} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101374} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101375} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101375} Parameters: [24, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101375} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101376} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@180e6ac4] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101377} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101377} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101378} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101378} Parameters: [23, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101378} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101379} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2a39fe6a] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101380} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101380} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101381} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101381} Parameters: [5, 2, 23, 24]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101381} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@d5ae57e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101382} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101382} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101383} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101383} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101383} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101384} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101384} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101384} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@305f031] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101385} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101385} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101386} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101386} Parameters: [荣盛发展(陈金海)-华夏基金 (潘中宁), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 荣盛发展(陈金海)-华夏基金 (潘中宁), 11, -1, ,f23,c24,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101386} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101385} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101387} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101387} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101387} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101388} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101388} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101388} Result: [67]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6e16b8b5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101389} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101389} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101390} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101390} Parameters: [24]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101390} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101391} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101391} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101391} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101391} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101391} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1536602f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101392} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101392} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101393} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101393} Parameters: [24, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101393} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101394} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6256ac4f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101395} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101395} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101396} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101396} Parameters: [14, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101396} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101397} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@235f4c10] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101398} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101398} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101399} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101399} Parameters: [5, 1, 14, 24]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101399} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2c1b9e4b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101400} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101400} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101401} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101401} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101401} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101402} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101402} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101402} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3c0fae6c] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101403} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101403} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101404} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101404} Parameters: [荣盛发展(陈金海)-海富通123123(石红军123123), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 荣盛发展(陈金海)-海富通123123(石红军123123), 16, -1, ,f14,c24,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101404} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101403} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101405} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101405} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101405} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101406} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101406} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101406} Result: [68]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4eed46ee] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101407} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101407} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101408} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101408} Parameters: [88]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101408} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101409} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101409} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101409} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101409} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101409} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@475835b1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101410} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101410} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101411} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101411} Parameters: [88, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101411} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101412} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@716a7124] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101413} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101413} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101414} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101414} Parameters: [10, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101414} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101415} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@7e809b79] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101416} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101416} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101417} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101417} Parameters: [5, 1, 10, 88]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101417} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@72bd06ca] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101418} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101418} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101419} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101419} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101419} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101420} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101420} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101420} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4fe89c24] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101421} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101421} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101422} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101422} Parameters: [云南锗业 (金红国)-国投瑞银(刘伟), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 云南锗业 (金红国)-国投瑞银(刘伟), 17, -1, ,f10,c88,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101422} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101421} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101423} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101423} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101423} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101424} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101424} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101424} Result: [69]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1a1da881] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101425} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101425} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101426} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101426} Parameters: [58]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101426} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101427} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101427} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101427} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101427} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101427} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@165b8a71] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101428} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101428} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101429} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101429} Parameters: [58, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101429} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101430} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@756cf158] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101431} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101431} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101432} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101432} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101432} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101433} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101433} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101433} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@76c7beb3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101434} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101434} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101435} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101435} Parameters: [58, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101435} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101436} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@30ea8c23] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101437} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101437} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101438} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101438} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101438} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101439} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101439} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101439} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@611df6e3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101440} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101440} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101441} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101441} Parameters: [58, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101441} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101442} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5d465e4b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101443} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101443} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101444} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101444} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101444} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101445} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101445} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101445} Result: [3, 12, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3d8bbcdc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101446} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101446} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101447} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101447} Parameters: [58]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101447} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101448} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101448} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101448} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101448} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101448} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@18a3962d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101449} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101449} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101450} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101450} Parameters: [58, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101450} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101451} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4b85880b] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101452} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101452} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101453} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101453} Parameters: [3, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101453} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101454} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@452ba1db] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101455} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101455} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101456} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101456} Parameters: [5, 1, 3, 58]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101456} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@184497d1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101457} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101457} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101458} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101458} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101458} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101459} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101459} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101459} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@26fb628] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101460} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101460} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101461} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101461} Parameters: [航空动力(赵岳)-博时基金(丁丹), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 航空动力(赵岳)-博时基金(丁丹), 18, -1, ,f3,c58,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101461} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101460} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101462} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101462} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101462} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101463} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101463} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101463} Result: [70]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@35beb15e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101464} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101464} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101465} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101465} Parameters: [59]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101465} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101466} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101466} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101466} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101466} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101466} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6c67e137] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101467} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101467} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101468} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101468} Parameters: [59, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101468} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101469} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@9635fa] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101470} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101470} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101471} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101471} Parameters: [22, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101471} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101472} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101472} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101472} Result: [3, 2, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@2d10e0b1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101473} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101473} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101474} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101474} Parameters: [59, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101474} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101475} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5bda80bf] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101476} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101476} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101477} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101477} Parameters: [22, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101477} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101478} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101478} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101478} Result: [3, 11, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5e8f9e2d] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101479} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101479} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101480} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101480} Parameters: [59, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101480} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101481} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@60d8c0dc] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101482} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101482} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101483} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101483} Parameters: [22, 3]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101483} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101484} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101484} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101484} Result: [3, 12, 22]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@4602c2a9] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101485} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101485} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101486} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101486} Parameters: [91]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101486} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101487} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101487} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101487} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101487} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101487} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@79e18e38] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101488} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101488} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101489} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101489} Parameters: [91, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101489} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101490} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@69c79f09] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101491} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101491} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101492} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101492} Parameters: [16, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101492} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101493} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@533b266e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101494} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101494} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101495} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101495} Parameters: [5, 1, 16, 91]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101495} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6865c751] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101496} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101496} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101497} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101497} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101497} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101498} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101498} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101498} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1d71006f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101499} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101499} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101500} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101500} Parameters: [新纶科技(杨利)-海富通(陈洪), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 新纶科技(杨利)-海富通(陈洪), 19, -1, ,f16,c91,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101500} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101499} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101501} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101501} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101501} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101502} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101502} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101502} Result: [71]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3ebff828] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101503} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101503} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101504} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101504} Parameters: [28]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101504} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101505} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101505} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101505} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101505} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101505} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5f3b9c57] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101506} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101506} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101507} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101507} Parameters: [28, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101507} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101508} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3624da92] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101509} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101509} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101510} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101510} Parameters: [43, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101510} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101511} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101511} Header: [status, companyId, fundId]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101511} Result: [5, 53, 43]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@34645867] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101512} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101512} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101513} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101513} Parameters: [28, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101513} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101514} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1255b1d1] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101515} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101515} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101516} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101516} Parameters: [43, 2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101516} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101517} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5f59185e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101518} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101518} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101519} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101519} Parameters: [5, 2, 43, 28]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101519} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@51e4ccb3] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101520} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101520} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101521} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101521} Parameters: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101521} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101522} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101522} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101522} Result: [2, 2014-11-23, 10:00-11:00, 1a, 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5fd62371] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101523} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101523} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101524} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101524} Parameters: [金地集团(唐燕)-上投摩根(唐倩), 2014-11-23 10:00:00.0, 2014-11-23 11:00:00.0, 0, 金地集团(唐燕)-上投摩根(唐倩), 12, -1, ,f43,c28,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101524} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101523} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101525} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101525} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101525} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101526} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101526} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101526} Result: [72]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@841e575] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101527} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101527} Preparing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101528} Executing Statement:        select ca.time_frame_id       from company_availbility ca inner join company c on ca.company_id=c.id       where c.id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101528} Parameters: [28]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101528} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101529} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101529} Header: [time_frame_id]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101529} Result: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101529} Result: [2]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101529} Result: [3]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@6c345c5f] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101530} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101530} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101531} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where company_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101531} Parameters: [28, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101531} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101532} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@1568159] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101533} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101533} Preparing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101534} Executing Statement:        select status as status, company_id as companyId , fund_id as fundId       from one_on_one_meeting_request       where fund_id=? and time_frame_id=?     
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101534} Parameters: [53, 1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101534} Types: [java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101535} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@3af17be2] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101536} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101536} Preparing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101537} Executing Statement:          update one_on_one_meeting_request         set status=?, time_frame_id=?         where fund_id=? and company_id=?       
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101537} Parameters: [5, 1, 53, 28]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101537} Types: [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5f4d427e] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101538} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101538} Preparing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101539} Executing Statement:          select *         from time_frame         where id=?      
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101539} Parameters: [1]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101539} Types: [java.lang.Integer]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101540} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101540} Header: [id, date, time_window, region, start_time, end_time]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101540} Result: [1, 2014-11-23, 9:00-10:00, 1a, 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:168) ] Opened SqlMapSession [com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl@5d5d9e5] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101541} Connection
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.orm.ibatis.SqlMapClientTemplate.execute(SqlMapClientTemplate.java:185) ] Obtained JDBC Connection [Transaction-aware proxy for target Connection  from DataSource [org.apache.commons.dbcp.BasicDataSource@3e74829]] for iBATIS operation
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101541} Preparing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) ] Fetching JDBC Connection from DataSource
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101542} Executing Statement:         insert into `tbl_schedule` (`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `venue`, `color`, `attendee`)        values (?, ?, ?, ?, ?, ?, ?, ?)             
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101542} Parameters: [金地集团(唐燕)-中银基金(祁善斌 ), 2014-11-23 09:00:00.0, 2014-11-23 10:00:00.0, 0, 金地集团(唐燕)-中银基金(祁善斌 ), 20, -1, ,f53,c28,]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101542} Types: [java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {conn-101541} Preparing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101543} Executing Statement:            SELECT LAST_INSERT_ID()        
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101543} Parameters: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {pstm-101543} Types: []
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101544} ResultSet
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101544} Header: [LAST_INSERT_ID()]
[DEBUG][main][2014-12-13 16:41:22] [ com.ibatis.common.logging.jakarta.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:27) ] {rset-101544} Result: [73]
[DEBUG][main][2014-12-13 16:41:22] [ org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) ] Returning JDBC Connection to DataSource
