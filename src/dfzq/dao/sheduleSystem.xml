<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap>

    <!-- Use type aliases to avoid typing the full classname every time. -->

    <typeAlias alias="Fund" type="dfzq.model.Fund"/>
    <typeAlias alias="OneOnOneMeetingRequest" type="dfzq.model.OneOnOneMeetingRequest"/>
    <typeAlias alias="Company" type="dfzq.model.Company"/>
    <typeAlias alias="Availability" type="dfzq.model.Availability"/>
    <typeAlias alias="Timeframe" type="dfzq.model.Timeframe"/>
    <typeAlias alias="FundAvailability" type="dfzq.model.FundAvailability"/>
    <typeAlias alias="Availability" type="dfzq.model.Availability"/>  
    <typeAlias alias="FundChangeRow" type="dfzq.model.FundChangeRow"/>  
    <typeAlias alias="CompanyChangeRow" type="dfzq.model.CompanyChangeRow"/>   
    
    <insert id="insertFund" parameterClass="Fund">
        insert into fund( fund_name, phone_number,contact) values (
        #fundName#,#phoneNumber#,#contactor#)

        <selectKey resultClass="int" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>


    <insert id="insertOneOnOneMeetingRequest" parameterClass="OneOnOneMeetingRequest">
        insert into one_on_one_meeting_request (fund_id, company_id) values (#fund.id#,#company.id#)
    </insert>

    <insert id="saveCompanyAvailablility" parameterClass="Availability">
        insert into company_availbility (company_id, time_frame_id) values (#company.id#,#timeFrameId#)
    </insert>


    <insert id="saveCompany" parameterClass="Company">
        insert into company( name, contact) values (#name#,#contact#)

        <selectKey resultClass="int" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="getCompanyByName" parameterClass="string" resultClass="Company">
      select id as id , name as name, contact as contact
      from company
      where name=#name#
    </select>
    
<!--     return fund list -->
    
    <resultMap id="fund-result" class="Fund">
       <result column="id" property="id" />
       <result column="fund_name" property="fundName" />
       <result column="phone_number" property="phoneNumber" />
       <result column="contact" property="contactor" />
    </resultMap>

    <select id="getFundList" parameterClass="java.util.Map" resultMap="fund-result">
      select * from fund
    </select>
    
    
<!-- return fund by id -->

<!--     <select id="getFundById" parameterClass="Integer" resultClass="Fund"> -->
<!--       select * from fund where id=#fundid# -->
<!--     </select> -->

    
<!--     return company list -->

    <resultMap id="company-result" class="Company">
       <result column="id" property="id" />
       <result column="name" property="name" />
       <result column="contact" property="contact" />
    </resultMap>

    <select id="getCompanyList" parameterClass="java.util.Map" resultMap="company-result">
      select * from company
    </select>

<!-- return 1v1 company list for a fund -->

    <resultMap id="1v1company-result" class="Company">
       <result column="id" property="id" />
       <result column="name" property="name" />
       <result column="contact" property="contact" />
    </resultMap>

    <select id="get1on1CompanyList" parameterClass="Integer" resultMap="1v1company-result">
      SELECT company.* 
      FROM one_on_one_meeting_request 
      INNER JOIN company 
      ON one_on_one_meeting_request.company_id = company.id 
      where fund_id = #fundid#
    </select>
    
<!--     return all time slots in JSON -->

    <resultMap id="timeframe-result" class="Timeframe">
       <result column="id" property="id" />
       <result column="date" property="date" />
       <result column="time_window" property="time_window" />
       <result column="region" property="region" />
       <result column="start_time" property="startTime" />
       <result column="end_time" property="endTime" />

    </resultMap>

    <select id="getTimeframeList" parameterClass="java.util.Map" resultMap="timeframe-result">
      select * from time_frame
    </select>


    <select id="getTimeFrameByRegion" parameterClass="string" resultMap="timeframe-result">
      select * from time_frame
      where region=#region#
    </select>

<!-- return fund time availability  -->

    <resultMap id="fundAvailTimeframe-result" class="Timeframe">
       <result column="id" property="id" />
       <result column="date" property="date" />
       <result column="time_window" property="time_window" />
       <result column="region" property="region" />
    </resultMap>

    <select id="getFundTime" parameterClass="Integer" resultMap="fundAvailTimeframe-result">
		select time_frame.* 
		from fund_availbility
		inner join time_frame
		on fund_availbility.time_frame_id = time_frame.id
		where fund_availbility.fund_id = #fundid#	
    </select>

<!-- company time availability -->

    <resultMap id="companyAvailTimeframe-result" class="Timeframe">
       <result column="id" property="id" />
       <result column="date" property="date" />
       <result column="time_window" property="time_window" />
       <result column="region" property="region" />
    </resultMap>

    <select id="getCompanyTime" parameterClass="Integer" resultMap="companyAvailTimeframe-result">
		select time_frame.* 
		from company_availbility
		inner join time_frame
		on company_availbility.time_frame_id = time_frame.id
		where company_availbility.company_id = #companyid#
    </select>
    
<!--     delete all 1on1 request for a fund -->

    <delete id="deleteAll1on1Company" parameterClass="Integer">
    	delete from one_on_one_meeting_request 
    	where fund_id = #fundid#
    </delete>
    
<!--     delete all time slot available for a fund -->

    <delete id="deleteFundAllTimeslots" parameterClass="Integer">
    	delete from fund_availbility 
    	where fund_id = #fundid#
    </delete>

<!--     delete all time slot available for a company -->

    <delete id="deleteCompanyAllTimeslots" parameterClass="Integer">
    	delete from company_availbility 
    	where company_id = #companyid#
    </delete>
    
<!--     insert 1one1 request for a fund -->
	<insert id="insert1on1Company" parameterClass="OneOnOneMeetingRequest">
		insert into one_on_one_meeting_request (fund_id, company_id, musthave, small)
		value (#fundId#, #companyId#, #musthave#, #small#)
	</insert>
	
<!-- 	insert time slot for a fund -->

	<insert id="insertFundTimeslot" parameterClass="FundAvailability">
		insert into fund_availbility (fund_id, time_frame_id)
		value (#fund.id#, #timeFrameId#)
	</insert>

<!-- 	insert time slot for a company -->

	<insert id="insertCompanyTimeslot" parameterClass="Availability">
		insert into company_availbility (company_id, time_frame_id)
		value (#company.id#, #timeFrameId#)
	</insert>

    <select id="getTimeFrameById" parameterClass="int" resultMap="timeframe-result">
        select *
        from time_frame
        where id=#id#

    </select>
	
<!--     get company by ID -->
<!--     <select id="getCompanyById" parameterClass="Integer" resultClass="Company"> -->
<!--     	select * from company where id = #companyid# -->
<!--     </select> -->

    <select id="loadAvailableMeetingRequest" parameterClass="map" resultClass="OneOnOneMeetingRequest">
select  one.company_id as companyId , one.fund_id as fundId, one.must_have_flag as mustHaveFlag
from company c
inner join one_on_one_meeting_request one
on one.company_id= c.id
where exists(select 1 from company_availbility where company_id=c.id and time_frame_id in $timeFrame$ ) and
not exists (select 1 from company_availbility where company_id=c.id and time_frame_id in  $otherTimeFrame$ )
group by  one.company_id , one.fund_id, one.must_have_flag



    </select>

    <select id="loadAvailableWholeDayCompanies" parameterClass="map" resultClass="OneOnOneMeetingRequest">
select  one.company_id as companyId , one.fund_id as fundId , one.must_have_flag as mustHaveFlag
from company c
inner join one_on_one_meeting_request one
on one.company_id= c.id
where exists(select 1 from company_availbility where company_id=c.id and time_frame_id in $timeFrame$ ) and
 exists (select 1 from company_availbility where company_id=c.id and time_frame_id in  $otherTimeFrame$ )
group by  one.company_id , one.fund_id, one.must_have_flag



    </select>

    <select id="getCompanyById" parameterClass="int" resultClass="Company">
        select id as id , name as name, contact as contact
      from company
      where id=#id#
    </select>


    <select id="getFundById" parameterClass="int" resultClass="Fund">
        select id as id , fund_name as fundName, phone_number as phoneNumber ,contact as contactor
      from fund
      where id=#id#
    </select>

    <select id="countTheAvailableTime" parameterClass="map" resultClass="int">
        select count(*)
        from company_availbility
        where company_id=#companyId# and time_frame_id in $companyAvailableTimeFrame$

    </select>

    <update id="updateArrangement" parameterClass="map">
        update one_on_one_meeting_request
        set status=#status#, time_frame_id=#timeFrameId#
        where fund_id=#fund_id# and company_id=#company_id#


    </update>

    <select id="getNextAvailableTimeFrame" parameterClass="Company" resultClass="int">
      select ca.time_frame_id
      from company_availbility ca inner join company c on ca.company_id=c.id
      where c.id=#id#
    </select>

    <select id="getOneOnOneMeetingRequestByCompanyIdAndtimeFrameId" parameterClass="map"
            resultClass="OneOnOneMeetingRequest">
      select status as status, company_id as companyId , fund_id as fundId
      from one_on_one_meeting_request
      where company_id=#company_id# and time_frame_id=#availableTimeFrameId#  and status not in (9, 6)
    </select>

    <select id="getOneOnOneMeetingRequestByFundIdAndtimeFrameId" parameterClass="map"
            resultClass="OneOnOneMeetingRequest">
      select status as status, company_id as companyId , fund_id as fundId
      from one_on_one_meeting_request
      where fund_id=#fund_id# and time_frame_id=#availableTimeFrameId#   and status not in (6,9)
    </select>

<!-- 	save fund changes from frontend -->
	<insert id="insertFundfromChanges" parameterClass="FundChangeRow">
		insert into fund (fund_name, phone_number, contact)
		value (#fundName#, #phoneNumber#, #contactor#)
        <selectKey resultClass="int" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
	</insert>

    <delete id="deleteFundfromChanges" parameterClass="FundChangeRow">
    	delete from fund
    	where id = #id#
    </delete>
    
    <update id="updateFundfromChanges" parameterClass="FundChangeRow">
    	update fund
    	set fund_name = #fundName#, phone_number = #phoneNumber#, contact = #contactor#
    	where id = #id#
    </update>    
    
    
<!-- 	save company changes from frontend -->
	<insert id="insertCompanyfromChanges" parameterClass="CompanyChangeRow">
		insert into company (name, contact)
		value (#name#, #contact#)
        <selectKey resultClass="int" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
	</insert>

    <delete id="deleteCompanyfromChanges" parameterClass="CompanyChangeRow">
    	delete from company
    	where id = #id#
    </delete>
    
    <update id="updateCompanyfromChanges" parameterClass="CompanyChangeRow">
    	update company
    	set name = #name#, contact = #contact#
    	where id = #id#
    </update>    
    
<!--     return 1on1 meeting request -->
    
    <resultMap id="meetreq-result" class="OneOnOneMeetingRequest">
       <result column="fund_name" property="fund.fundName" />
       <result column="name" property="company.name" />
       <result column="fundid" property="fundId" />
       <result column="companyid" property="companyId" />
       <result column="musthave" property="musthave" />
       <result column="small" property="small" />
    </resultMap>

    <select id="getMeetReqList" resultMap="meetreq-result">
		select fund_name, name, fund.id as fundid, company.id as companyid, musthave, small from one_on_one_meeting_request 
		left join fund on one_on_one_meeting_request.fund_id = fund.id
		left join company on one_on_one_meeting_request.company_id = company.id
    </select>
    
<!--     return 1on1 meeting request for a fund-->
    
    <select id="getMeetReqListForFund" resultMap="meetreq-result">
		select fund_name, name, fund.id as fundid, company.id as companyid, musthave, small from one_on_one_meeting_request 
		left join fund on one_on_one_meeting_request.fund_id = fund.id
		left join company on one_on_one_meeting_request.company_id = company.id
		where fund.id = #fundid#
    </select>
    
<!--     clear meeting request calculate result -->
    <update id="updateOneOnOneMeetingRequest">
    	update one_on_one_meeting_request
    	set status = null, time_frame_id = null
    </update>
    
    <delete id="deleteTblSchedule">
    	delete from tbl_schedule
    </delete>


    <select id="getArrangeMeeting" parameterClass="map" resultClass="OneOnOneMeetingRequest">
        select   fund_id as fundId , company_id as companyId , time_frame_id as timeFrameId
        from one_on_one_meeting_request
        where     fund_id=#fundId# and company_id=#companyId#


    </select>

    <select id="findInterestingFunds" parameterClass="map" resultClass="OneOnOneMeetingRequest">
        select request.fund_id as fundId , request.company_id as companyId , request.time_frame_id as timeFrameId
        from   one_on_one_meeting_request request inner join  fund fund
        on fund.id= request.fund_id
        where request.company_id = #companyId#   and  status=#status#
        order by request.must_have_flag desc , fund.priority desc



    </select>


    <update id="updateMeetingStatus" parameterClass="OneOnOneMeetingRequest">
        update    one_on_one_meeting_request
         set status=#status#  , time_frame_id=#timeFrameId#
        where company_id = #companyId#  and  fund_id=#fundId#
    </update>

    <delete id="deleteScheduleByAttendee" parameterClass="string">
        delete from tbl_schedule
        where attendee=#attendee#

    </delete>


    <select id="get1on1List" parameterClass="map" resultClass="OneOnOneMeetingRequest">
             select fund_id as fundId , company_id as companyId , time_frame_id as timeFrameId
        from   one_on_one_meeting_request
               where fund_id = #fundId#   and  time_frame_id in $timeFrame$

    </select>

    <select id="getArrangeMeetingByCompanyAndTime" parameterClass="map" resultClass="OneOnOneMeetingRequest">
        select fund_id as fundId , company_id as companyId , time_frame_id as timeFrameId
        from   one_on_one_meeting_request
        where company_id = #companyId#   and  time_frame_id =#timeFrameId#



    </select>


    <select id="getInterestedAndUnScheduleCompanies" parameterClass="int" resultMap="company-result">
         SELECT company.*
      FROM one_on_one_meeting_request
      INNER JOIN company
      ON one_on_one_meeting_request.company_id = company.id
      where fund_id = #fundid# and one_on_one_meeting_request.time_frame_id is null


    </select>

</sqlMap>
